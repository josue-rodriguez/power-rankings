knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
log10_name.plot
year.plot
year.plot <- ggplot(fig_data, aes(x = year, y = prop_log10)) +
geom_point() +
geom_smooth(method = 'lm')year.plot
year.plot
year.plot <- ggplot(fig_data, aes(x = year, y = prop_log10)) +
geom_point() +
geom_smooth(method = 'lm')year.plot
year.plot
# scatterplot
year.plot <- ggplot(fig_data, aes(x = year, y = prop_log10)) +
geom_point() +
geom_smooth(method = 'lm')
year.plot
clean_data <- babynames %>%
filter(name == 'Taylor')%>%
filter(year > 1900 & year <= 2000) %>%
mutate(name = factor(name))
source('~/Documents/GitHub/Name Analysis/data-viz.R', echo=TRUE)
year.plot
summary(year.lm)
year.lm <- lm(prop_log10 ~ year, data = data_stats)
summary(year.lm)
data_stats <- fig_data
# continuous regression
year.lm <- lm(prop_log10 ~ year, data = data_stats)
summary(year.lm)
sex_box.plot
sex_box.plot <- ggplot(fig_data, aes(x = sex, y = prop_log10, color = sex)) +
geom_boxplot()
sex_box.plot
sex_box.plot <- ggplot(fig_data, aes(x = sex, y = prop_log10, fill = sex)) +
geom_boxplot()
sex_box.plot
save.image("~/Documents/GitHub/Name Analysis/name_analysis.RData")
summary(sex.lm)
# categorical regression
sex.lm <- lm(prop_log10 ~ sex, data = data_stats)
summary(sex.lm)
sex.lm.resid <- resid(sex.lm)
head(sex.lm.resid)
summary(sex.lm)
save.image("~/Documents/GitHub/Name Analysis/name_analysis.RData")
### Visualizing Data ###
source('~/Documents/GitHub/Name Analysis/data-cleaning.R')
### Visualizing Data ###
source('~/Documents/GitHub/Name-Analysis/data-cleaning.R')
### Visualizing Data ###
source('~/Documents/GitHub/Name-Analysis/data-cleaning.R')
fig_data <- clean_data
source('~/Documents/GitHub/Name-Analysis/data-viz.R', echo=TRUE)
sex_box.plot <- ggplot(fig_data, aes(x = sex, y = prop_log10, fill = sex)) +
geom_boxplot() +
labs(title = "Proportion of Babys named Taylor between Sexes")
sex_box.plot
sex_box.plot <- ggplot(fig_data, aes(x = sex, y = prop_log10, fill = sex)) +
geom_boxplot() +
labs(title = "Proportion of Babys named Taylor between Sexes",
subtitle = '1900 - 2000')
sex_box.plot
sex_box.plot <- ggplot(fig_data, aes(x = sex, y = prop_log10, fill = sex)) +
geom_boxplot() +
labs(title = "Proportion of Babys named Taylor between Sexes",
subtitle = '1900 - 2000',
x = 'Sex',
y = 'Proportion (log base 10 transformed',
fill = 'Sex')
sex_box.plot
sex_year.plot
sex_year.plot <- ggplot(fig_data, aes(x = year, y = prop_log10, color = sex)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(title = "Proportion of Babys named Taylor Over Time Between Sexes",
subtitle = '1900 - 2000',
x = 'Year',
y = 'Proportion (log base 10 transformed',
fill = 'Sex')
sex_year.plot
year.plot
# scatterplot
year.plot <- ggplot(fig_data, aes(x = year, y = prop_log10)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(title = "Proportion of Babys named Taylor Over Time",
subtitle = '1900 - 2000',
x = 'Year',
y = 'Proportion (log base 10 transformed',
fill = 'Sex')
year.plot
save.image("~/Documents/GitHub/Name-Analysis/name_analysis.RData")
source('~/Documents/GitHub/Name-Analysis/data-cleaning.R', echo=TRUE)
source('~/Documents/GitHub/Name-Analysis/data-viz.R', echo=TRUE)
source('~/Documents/GitHub/Name-Analysis/regressions.R', echo=TRUE)
save.image("~/Documents/GitHub/Name-Analysis/name_analysis.RData")
# interaction
sex.year.lm <- lm(prop_log10 ~ year + sex, data = data_stats)
### Visualizing Data ###
source('~/Documents/GitHub/Name-Analysis/data-cleaning.R')
# interaction
sex.year.lm <- lm(prop_log10 ~ year + sex, data = data_stats)
data_stats <- fig_data
source('~/Documents/GitHub/Name-Analysis/data-viz.R', echo=TRUE)
# interaction
sex.year.lm <- lm(prop_log10 ~ year + sex, data = data_stats)
data_stats <- fig_data
# continuous regression
year.lm <- lm(prop_log10 ~ year, data = data_stats)
year.lm.resid <- resid(year.lm)
# categorical regression
sex.lm <- lm(prop_log10 ~ sex, data = data_stats)
summary(sex.lm)
sex.lm.resid <- resid(sex.lm)
head(sex.lm.resid)
# interaction
sex.year.lm <- lm(prop_log10 ~ year + sex, data = data_stats)
summary(sex.year.lm)
# interaction
sex.year.lm <- lm(prop_log10 ~ year + sex + year:sex, data = data_stats)
summary(sex.year.lm)
# interaction
sex.year.lm <- lm(prop_log10 ~ year + year:sex, data = data_stats)
summary(sex.year.lm)
# interaction
sex.year.lm <- lm(prop_log10 ~ year + sex + year:sex +, data = data_stats)
# interaction
sex.year.lm <- lm(prop_log10 ~ year + sex + year:sex, data = data_stats)
summary(sex.year.lm)
library(DBI)
id <- c(1:6)
source('~/.active-rstudio-document', echo=TRUE)
dat <- data.frame(id = id,
treatment = treatment,
eps = eps)
View(dat)
library(readxl)
path <- '~/Downloads/alcohol.xlsx'
data <- read_excel(path, col_names = TRUE)
dplyr::glimpse(data)
library(dplyr)
data <- data %>%
rename(ID = id,
Gender = sex,
Alcohol = alc,
Attractiveness = attract) %>%
mutate(sex = factor(sex),
alc = factor(alc))
data <- data %>%
rename(ID = id,
Gender = sex,
Alcohol = alc,
Attractiveness = attract)
source('~/.active-rstudio-document', echo=TRUE)
glimpse(data)
aov(attract ~ alc, data = data)
model <- aov(attract ~ alc, data = data)
summary(model)
TukeyHSD(model)
library(purrr)
path <- '~/Downloads/alcohol.xlsx'
data <- read_excel(path, col_names = TRUE)
source('~/.active-rstudio-document', echo=TRUE)
descriptives <- list(mean, sd, length)
map(descriptives, data[ , 4])
invoke_map(descriptives, data[ , 4])
descriptives <- list(mean, sd)
invoke_map(descriptives, data[ , 4])
data[ , 4]
invoke_map(descriptives, list(data[ , 4])
d
invoke_map(descriptives, list(data[ , 4]))
invoke_map(descriptives, x = list(data[ , 4]))
x1 <- c(13, 1, 27, 9)
f <- list(mean, sd)
invoke_map(f, x = x1)
x1 <- data %>% select(attract)
f <- list(mean, sd)
invoke_map(f, x = x1)
x1 <- data %>% select(attract) %>% as_vector()
f <- list(mean, sd)
invoke_map(f, x = x1)
x1 <- data %>% select(attract) %>% as_vector() %>% invoke_map(f)
data %>% select(attract) %>% as_vector() %>% invoke_map_dbl(f)
f <- list(mean, sd)
x <- data %>% select(attract) %>% as_vector()
f <- list(mean, sd)
invoke_map(f, x = x)
library(readxl)
library(dplyr)
library(purrr)
path <- '~/Downloads/alcohol.xlsx'
data <- read_excel(path, col_names = TRUE)
glimpse(data)
data <- data %>%
rename(id = ID,
sex = Gender,
alc = Alcohol,
attract = Attractiveness) %>%
mutate(sex = factor(sex),
alc = factor(alc))
glimpse(data)
invoke_map(f, x = data[ , 4])
f <- list(as_vector, mean, sd)
invoke_map(f, x = data[ , 4])
x <- data %>% select(attract) %>% as_vector()
invoke_map(f, x = x)
f <- list(mean, sd)
invoke_map(f, x = x)
?invoke_map
library(purrr)
?invoke_map
file.edit('~/Documents/GitHub/power-rankings/all_weeks.R')
file.edit('~/Documents/GitHub/power-rankings/gg_graphs.R')
set.seed(123)
x <- 1:10
y <- -2 + 3 * x + rnorm(10)
our_data <- data.frame(y = y, x = x)
our_model <- lm(y ~ x, data = our_data)
predict(our_model, newdata =  data.frame(x = 20)
x
predict(our_model, newdata =  data.frame(x = 20))
predict(our_model, newdata =  data.frame(x = 1:20))
predict(our_model, newdata =  data.frame(x = 1:200))
?predict
predict(our_model, newdata =  data.frame(x = 1:20), se.fit = TRUE)
file.edit('~/Documents/GitHub/power-rankings-all/weeks.R')
file.edit('~/Documents/GitHub/power-rankings/all_weeks.R')
x <- read.csv('~/Downloads/Alcohol.csv')
x <- readxl::read_excel('~/Downloads/Alcohol.xlsx')
with(x ,interaction.plot(F_axis, F_line, Attractiveness, fun = mean, bty = 'n'))
x <- readxl::read_excel('~/Downloads/Alcohol.xlsx')
library(ggplot2)
x <- x %>% mutate(Gender = factor(Gender),
Alcohol = factor(Alcohol))
library(ggplot2); library(dplyr)
x <- x %>% mutate(Gender = factor(Gender),
Alcohol = factor(Alcohol))
g <- ggplot(x, aes(x = Alcohol, y = Attractivness, color = Gender) +
g
g <- ggplot(x, aes(x = Alcohol, y = Attractivness, color = Gender)) +
stat_summary(fun.y = mean, geom = 'line')
g <- ggplot(x, aes(x = Alcohol, y = Attractivness, color = Gender)) +
stat_summary(fun.y = mean, geom = 'line')
g
g <- ggplot(x, aes(x = Alcohol, y = Attractiveness, color = Gender)) +
stat_summary(fun.y = mean, geom = 'line')
g
complete.cases(x)
g <- ggplot(x, aes(x = Alcohol, y = Attractiveness)) +
stat_summary(fun.y = mean, geom = 'line')
g
g <- ggplot(x, aes(x = Alcohol, y = Attractiveness, group = Gender)) +
stat_summary(fun.y = mean, geom = 'line')
g
g <- ggplot(x, aes(x = Alcohol, y = Attractiveness, group = Gender, color = Gender)) +
stat_summary(fun.y = mean, geom = 'line')
g
g <- ggplot(x, aes(x = Alcohol, y = Attractiveness, group = Gender, color = Gender)) +
stat_summary(fun.y = mean, geom = 'bar')
g
ggplot(x, aes(x = Alcohol, y = Attractiveness, group = Gender, color = Gender)) +
geom_line()
stat_summary(fun.y = mean)
stat_summary(fun.y = mean, geom = 'line')
ggplot(x, aes(x = Alcohol, y = Attractiveness, group = Gender)) +
stat_summary(fun.y = mean, geom = 'line')
ggplot(x, aes(x = Alcohol, y = Attractiveness, group = Gender)) +
geom_line(aes(linetype = Gender, color = Gender)) +
stat_summary(fun.y = mean)
ggplot(x, aes(x = Alcohol, y = Attractiveness, group = Gender)) +
geom_line(aes(linetype = Gender, color = Gender)) +
stat_summary(fun.y = mean, geom = 'line')
ggplot(x, aes(x = Alcohol, y = Attractiveness, group = Gender)) +
stat_summary(fun.y = mean, geom = 'line')
ggplot(x, aes(x = Alcohol, y = Attractiveness, group = Gender)) +
stat_summary(fun.y = mean, geom = 'line', aes(linetype = Gender))
ggplot(x, aes(x = Alcohol, y = Attractiveness, group = Gender)) +
stat_summary(fun.y = mean, geom = 'line', aes(linetype = Gender, color = Gender))
library(ggplot2); library(dplyr); library(stringr)
args(recode)
x$Gender <- recode(x, c('man' = 'Man', 'woman' = 'Woman'))
x$Gender <- recode(x$Gender, c('man' = 'Man', 'woman' = 'Woman'))
x$Gender <- recode(x$Gender, 'man' = 'Man', 'woman' = 'Woman')
ggplot(x, aes(x = Alcohol, y = Attractiveness, group = Gender)) +
stat_summary(fun.y = mean, geom = 'line', aes(linetype = Gender, color = Gender)) +
labs(group)
ggplot(x, aes(x = Alcohol, y = Attractiveness, group = Gender)) +
stat_summary(fun.y = mean, geom = 'line', aes(linetype = Gender, color = Gender)) +
ggplot(x, aes(x = Alcohol, y = Attractiveness, group = Gender)) +
stat_summary(fun.y = mean, geom = 'line', aes(linetype = Gender, color = Gender))
ggplot(x, aes(x = Alcohol, y = Attractiveness, group = Gender)) +
stat_summary(fun.y = mean, geom = 'line', aes(linetype = Gender, color = Gender))
ggplot(x, aes(x = Gender, y = Attractiveness, group = Alcohol)) +
stat_summary(fun.y = mean, aes(linetype = Alcohol, color = Alcohol))
ggplot(x, aes(x = Gender, y = Attractiveness, group = Alcohol)) +
stat_summary(fun.y = mean, geom = 'line',aes(linetype = Alcohol, color = Alcohol))
ggplot(x, aes(x = Alcohol, y = Attractiveness, group = Gender)) +
stat_summary(fun.y = mean, geom = 'line', aes(linetype = Gender, color = Gender))
library(ggplot2); library(dplyr); library(stringr)
x <- x %>% mutate(Gender = factor(Gender),
Alcohol = factor(Alcohol))
x$Gender <- recode(x$Gender, 'man' = 'Man', 'woman' = 'Woman')
ggplot(x, aes(x = Alcohol, y = Attractiveness, group = Gender)) +
stat_summary(fun.y = mean, geom = 'line', aes(linetype = Gender, color = Gender))
ggplot(x, aes(x = Gender, y = Attractiveness, group = Alcohol)) +
stat_summary(fun.y = mean, geom = 'line',aes(linetype = Alcohol, color = Alcohol))
library(pwr2ppl)
library(pwr)
detach("package:pwr2ppl", unload=TRUE)
library(readr); library(dplyr)
x <- read_csv('/Downloads/Long-Term_Occupational/Employment/Projections.csv')
x <- read_csv('~/Downloads/Long-Term_Occupational/Employment/Projections.csv')
x <- read_csv('~/Downloads/Long-Term_Occupational_Employment_Projections.csv')
names(x)
complete.cases(x)
sum(complete.cases(x))
glimpse(x)
x <- read_csv('~/Downloads/Long-Term_Occupational_Employment_Projections.csv') %>% janitor::clean_names()
names(x)
sum(complete.cases(x))
glimpse(x)
levels(x$)
levels(x$area_name)
library(readr); library(dplyr); library(plyr)
library(readr); library(dplyr); library(plyr)
library(dplyr)
?colwise
typeof(x$area_type)
data <- as.factor(data)
data <- as.factor(data)}
data <- as.factor(data)
to_factor <- function(data) {
if (is.character(data) == T) {
data <- as.factor(data)
}
}
View(to_factor)
colwise(to_factor, x)
colwise(to_factor)(x)
print(i)
for (i in x) {
print(i)
}
for (i in seq_along(x)) {
print(i)
}
x[[i]]
x[[, i]]
x[i]
typeof(x[i])
for (i in seq_along(x)) {
typeof(x[i])
}
View(to_factor)
purrr::map(x, to_factor)
x <- read_csv('~/Downloads/Long-Term_Occupational_Employment_Projections.csv') %>% janitor::clean_names()
cols <- c('area_type', 'area_name', 'period', 'occupational_title', 'entry_level_education', 'work_experience', 'job_training')
x[cols] <- as.factor(x[cols])
all_weeks <- cbind(week0[3], week1[3], week2[3], week3[3], week4[3], week5[3], week6[3], week7[3], week8[3],
week9[3], week10[3], week11[3], week12[3], week13[3], week14[3], week15[3], week16[3], week17[3])
library(dplyr)
library(tidyr)
library(purrr)
library(readxl)
path <- '~/Documents/GitHub/power-rankings/power-rankings.xlsx'
import_rankings <- map(excel_sheets(path),
read_excel,
path = path)
power_rankings <- map(import_rankings, gather, key = ranker, value = team, -ranking)
df_names <- paste0('week', 0:(length(power_rankings) - 1))
names(power_rankings) <- df_names
list2env(power_rankings, .GlobalEnv)
all_weeks <- cbind(week0[3], week1[3], week2[3], week3[3], week4[3], week5[3], week6[3], week7[3], week8[3],
week9[3], week10[3], week11[3], week12[3], week13[3], week14[3], week15[3], week16[3], week17[3])
colnames(all_weeks) <- df_names
all_weeks <- cbind(week1[1], all_weeks)
all_gathered <- na.omit(all_weeks) %>% gather(key = week, value = team, -ranking)
all_gathered$week <- factor(all_gathered$week, ordered = TRUE,
levels = c('week0', 'week1', 'week2', 'week3', 'week4', 'week5', 'week6', 'week7', 'week8',
'week9', 'week10', 'week11', 'week12', 'week13', 'week14', 'week15', 'week16', 'week17'))
all_gathered$team <- as.factor(all_gathered$team)
all_gathered %>% group_by(week, team) %>% summarise(mean_ranking = mean(ranking))
library(dplyr)
library(tidyr)
library(purrr)
library(readxl)
path <- '~/Documents/GitHub/power-rankings/power-rankings.xlsx'
import_rankings <- map(excel_sheets(path),
read_excel,
path = path)
power_rankings <- map(import_rankings, gather, key = ranker, value = team, -ranking)
df_names <- paste0('week', 0:(length(power_rankings) - 1))
names(power_rankings) <- df_names
list2env(power_rankings, .GlobalEnv)
all_weeks <- cbind(week0[3], week1[3], week2[3], week3[3], week4[3], week5[3], week6[3], week7[3], week8[3],
week9[3], week10[3], week11[3], week12[3], week13[3], week14[3], week15[3], week16[3], week17[3])
colnames(all_weeks) <- df_names
all_weeks <- cbind(week1[1], all_weeks)
all_gathered <- na.omit(all_weeks) %>% gather(key = week, value = team, -ranking)
all_gathered$week <- factor(all_gathered$week, ordered = TRUE,
levels = c('week0', 'week1', 'week2', 'week3', 'week4', 'week5', 'week6', 'week7', 'week8',
'week9', 'week10', 'week11', 'week12', 'week13', 'week14', 'week15', 'week16', 'week17'))
all_gathered$team <- as.factor(all_gathered$team)
all_gathered %>% group_by(week, team) %>% summarise(mean_ranking = mean(ranking))
path <- '~/Documents/GitHub/power-rankings/power-rankings.xlsx'
import_rankings <- map(excel_sheets(path),
read_excel,
path = path)
power_rankings <- map(import_rankings, gather, key = ranker, value = team, -ranking)
df_names <- paste0('week', 0:(length(power_rankings) - 1))
path <- '~/Documents/GitHub/power-rankings/power-rankings.xlsx'
import_rankings <- map(excel_sheets(path),
read_excel,
path = path)
power_rankings <- map(import_rankings, gather, key = ranker, value = team, -ranking)
df_names <- paste0('week', 0:(length(power_rankings) - 1))
names(power_rankings) <- df_names
list2env(power_rankings, .GlobalEnv)
all_weeks <- cbind(week0[3], week1[3], week2[3], week3[3], week4[3], week5[3], week6[3], week7[3], week8[3],
week9[3], week10[3], week11[3], week12[3], week13[3], week14[3], week15[3], week16[3], week17[3])
all_weeks <- cbind(week0[3], week1[3], week2[3], week3[3], week4[3], week5[3], week6[3], week7[3], week8[3],
week9[3], week10[3], week11[3], week12[3], week13[3])
all_weeks <- cbind(week0[3], week1[3], week2[3], week3[3], week4[3], week5[3], week6[3], week7[3], week8[3],
week9[3], week10[3], week11[3], week12[3], week13[3], week14[3])
all_weeks <- cbind(week0[3], week1[3], week2[3], week3[3], week4[3], week5[3], week6[3], week7[3], week8[3],
week9[3], week10[3], week11[3], week12[3], week13[3], week14[3], week15[3])
all_weeks <- cbind(week0[3], week1[3], week2[3], week3[3], week4[3], week5[3], week6[3], week7[3], week8[3],
week9[3], week10[3], week11[3], week12[3], week13[3], week14[3], week15[3])
path <- '~/Documents/GitHub/power-rankings/power-rankings.xlsx'
import_rankings <- map(excel_sheets(path),
read_excel,
path = path)
power_rankings <- map(import_rankings, gather, key = ranker, value = team, -ranking)
df_names <- paste0('week', 0:(length(power_rankings) - 1))
names(power_rankings) <- df_names
list2env(power_rankings, .GlobalEnv)
all_weeks <- cbind(week0[3], week1[3], week2[3], week3[3], week4[3], week5[3], week6[3], week7[3], week8[3],
week9[3], week10[3], week11[3], week12[3], week13[3], week14[3], week15[3], week16[3], week17[3])
colnames(all_weeks) <- df_names
all_weeks <- cbind(week1[1], all_weeks)
all_gathered <- na.omit(all_weeks) %>% gather(key = week, value = team, -ranking)
all_gathered$week <- factor(all_gathered$week, ordered = TRUE,
levels = c('week0', 'week1', 'week2', 'week3', 'week4', 'week5', 'week6', 'week7', 'week8',
'week9', 'week10', 'week11', 'week12', 'week13', 'week14', 'week15', 'week16', 'week17'))
all_gathered$team <- as.factor(all_gathered$team)
all_gathered %>% group_by(week, team) %>% summarise(mean_ranking = mean(ranking))
library(ggplot2)
library(directlabels)
library(dplyr)
library(purrr)
setwd('~/Documents/GitHub/power-rankings')
source('all_weeks.R')
all_colors <- c('#9B2743', '#051C2C', '#FC4C02', '#00338D', '#FC4C02', '#382F2D', '#C8102E', '#B0063A', '#0072CE', '#C8102E', '#001489',
'#003594', '#008E97', '#064C53', '#A6192E', '#001E62', '#006073', '#0C371D', '#0069B1', '#175E33', '#0085CA', '#0C2340',
'#101820', '#002244', '#241773', '#862633', '#A28D5B', '#4DFF00', '#FFB81C', '#A6192E', '#4B92DB', '#512D6D')
# create a plot for all teams
all_plot <- ggplot(group_by(all_gathered, week, team), aes(x = week, y = ranking, group = team, color = team)) +
stat_summary(fun.y = mean, geom = 'line', size = .75) +
labs(title = 'r/NFL Power Rankings', x = 'Week', y = 'Average Ranking', color = 'Teams') +
scale_x_discrete(labels = paste('Week', 0:(length(power_rankings) - 1), sep = ' ')) +
scale_y_continuous(trans = 'reverse', breaks = seq(1, 32, 2), sec.axis = dup_axis()) +
scale_color_manual(values = all_colors) +
theme(panel.grid.minor = element_blank())
all_plot <- direct.label(all_plot, method = list('first.bumpup', dl.trans(x = x - .15), cex = .65))
all_plot <- direct.label(all_plot, method = list('last.bumpup', dl.trans(x = x + .15), cex = .65))
# function for creating plots of individual divisions
plots <- function(t1, t2, t3, t4, div, cols) {
all_gathered %>% filter(team == t1|team == t2|team == t3|team == t4) %>%
ggplot(aes(x = week, y = ranking, group = team, color = team)) +
stat_summary(fun.y = mean, geom = 'line', size = 1.3) +
labs(title = div, x = 'Week', y = 'Average Ranking', color = 'Teams') +
coord_cartesian(ylim = c(1, 32))+
scale_x_discrete(labels = paste('Week', 0:(length(power_rankings) - 1), sep = ' ')) +
scale_y_continuous(trans = 'reverse', breaks = seq(1, 32, 2)) +
scale_color_manual(values = cols) +
theme(panel.grid.major = element_line(size = .5),
panel.grid.minor = element_blank())
}
# colors
nfc_north_cols <- c('#DC4405', '#0069B1', '#175E33', '#512D6D')
nfc_south_cols <- c('#C8102E', '#A6192E', '#0085CA', '#A28D5B')
nfc_west_cols <- c('#896C4C', '#9B2743', '#041E42', '#4DFF00')
nfc_east_cols <- c('#003594', '#004953', '#001E62', '#862633')
afc_north_cols <- c('#FC4C02', '#382F2D', '#241773', '#FFB81C')
afc_south_cols <- c('#001489', '#006073', '#A6192E', '#4B92DB')
afc_west_cols <- c('#FC4C02', '#0072CE', '#C8102E', '#101820')
afc_east_cols <-  c('#C8102E', '#008E97','#0C371D','#0C2340')
# creating division graphs
nfc_north <- plots('Packers', 'Vikings', 'Bears', 'Lions', 'NFC North', nfc_north_cols)
nfc_south <- plots('Falcons', 'Saints', 'Panthers', 'Buccaneers', 'NFC South', nfc_south_cols)
nfc_west <- plots('Rams', '49ers', 'Cardinals', 'Seahawks', 'NFC West', nfc_west_cols)
nfc_east <- plots('Giants', 'Redskins', 'Eagles', 'Cowboys', 'NFC East', nfc_east_cols)
afc_north <- plots('Ravens', 'Steelers', 'Bengals', 'Browns', 'AFC North', afc_north_cols)
afc_south <- plots('Jaguars', 'Colts', 'Texans', 'Titans', 'AFC South', afc_south_cols)
afc_west <- plots('Raiders','Chiefs', 'Broncos','Chargers', 'AFC West', afc_west_cols)
afc_east <- plots('Patriots', 'Jets', 'Bills', 'Dolphins', 'AFC East', afc_east_cols)
nfc_east
afc_west
all_plot
nfc_north
nfc_south
nfc_west
nfc_east
afc_north
afc_south
afc_west
afc_east
